{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","components/pageHeaders/header.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","components/contactDetails/ContactDetails.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","contact","setContact","htmlFor","id","value","onChange","e","target","map","name","AppointmentForm","title","setTitle","date","setDate","time","setTime","body","setBody","handleSubmit","className","onSubmit","type","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","form","rows","cols","placeholder","Tile","data","showDetails","tileData","Object","values","onClick","alert","element","index","TileList","emptyMessage","length","Header","pageName","AppointmentsPage","appointments","addAppointment","handleDelete","useState","childProps","preventDefault","ContactForm","setName","phone","setPhone","email","setEmail","notes","setNotes","editing","closeAddContact","useEffect","document","addEventListener","esc","key","removeEventListener","contactNotes","el","querySelector","style","display","stopPropagation","autoComplete","charAt","toUpperCase","slice","join","pattern","maxLength","ContactDetails","contactDetails","handleEditContact","closeContactDetails","ContactsPage","addContact","removeContact","editContact","screenSize","duplicate","setDuplicate","showContact","setShowContact","setContactDetails","setEditing","showNewContact","setShowNewContact","showAddContact","setShowAddContact","forEach","showContactDetails","resetStates","handleAddContact","find","tileProps","App","window","innerWidth","setScreenSize","setContacts","setAppointments","ROUTES","handleResizeWindow","sort","a","b","localeCompare","to","activeClassName","exact","path","prev","filter","newName","newPhone","newEmail","newNotes","current","findIndex","appointment","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.aabf24f4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({ contacts, contact, setContact }) => {\r\n  return (\r\n    <>\r\n      <label htmlFor='contacts'>Contact:</label>\r\n      <select id='contacts' value={contact} onChange={(e) => setContact(e.target.value)}>\r\n        <option>Select contact details</option>\r\n          {contacts.map((contact) => {\r\n            return (\r\n              <option key={contact.name} value={contact.name}>{contact.name}</option>\r\n            )\r\n          })}\r\n      </select>\r\n    </>\r\n  );\r\n};","import React from \"react\";\r\nimport { ContactPicker } from '../contactPicker/ContactPicker';\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  body, \r\n  setBody,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <div className='appointment-form-container'>\r\n      <form className='appointment-form' id='appointmentForm' onSubmit={handleSubmit}>\r\n        <label htmlFor=\"title\">Appointment title:</label><br/>\r\n        <input type='text' value={title} id='title' onChange={(e) => setTitle(e.target.value)}></input>\r\n\r\n        <label htmlFor=\"date\">Date:</label><br/>\r\n        <input type='date' value={date} id='date' min={getTodayString()} onChange={(e) => setDate(e.target.value)}></input>\r\n\r\n        <label htmlFor=\"time\">Time:</label><br/>\r\n        <input type='time' value={time} id='time' onChange={(e) => setTime(e.target.value)}></input>\r\n\r\n        <ContactPicker contacts={contacts} setContact={setContact} contact={contact} />\r\n\r\n        <input type='submit' value='Add appointment'></input>\r\n      </form>\r\n\r\n      <textarea \r\n        className='appointment-text-area' \r\n        form='appointmentForm' \r\n        rows='15' cols='50' \r\n        placeholder=\"Notes:\"\r\n        value={body}\r\n        onChange={(e) => setBody(e.target.value)}\r\n      ></textarea>\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport './tile.css';\r\n\r\nexport const Tile = ({ data, showDetails }) => {\r\n  const tileData = Object.values(data);\r\n\r\n  if (typeof data === 'string') {\r\n    return (\r\n      <div className=\"tile\" onClick={() => showDetails(data)}>\r\n        <p className='tile-title'>{data}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"tile\" onClick={() => alert(tileData)}>\r\n      {\r\n        tileData.map((element, index) => {\r\n          if (index === 0) {\r\n            return <p key={index} className='tile-title'>{element}</p>\r\n          }\r\n            return <p key={index} className='tile-text'>{element}</p>\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n//make onclick run passed down function from contacts, appoints etc. that will open modal","import React from \"react\";\r\nimport { Tile } from \"../tile/Tile\";\r\n\r\nexport const TileList = ({ data, emptyMessage, showDetails }) => {\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <div>\r\n         <p>{emptyMessage}</p>\r\n      </div>\r\n      )\r\n  }\r\n  return (\r\n    <>\r\n      {\r\n        data.map((element, index) => {\r\n          return <Tile key={index} data={element} showDetails={showDetails} />\r\n        })\r\n      }\r\n    </>\r\n  );\r\n};","import React from \"react\";\r\nimport './header.css';\r\n\r\nexport const Header = ({ pageName }) => {\r\n    return ( \r\n        <div className='page-header'>\r\n            <h1>{pageName}</h1>\r\n         </div>\r\n     );\r\n};","import React, { useState } from \"react\";\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\nimport { Header } from \"../../components/pageHeaders/header\";\r\nimport './appointmentsPage.css';\r\n\r\nexport const AppointmentsPage = ({ appointments, contacts, addAppointment, handleDelete }) => {\r\n  /*\r\n  Define state variables for \r\n  appointment info\r\n  */\r\n  const [title, setTitle] = useState('');\r\n  const [contact, setContact] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n  const [body, setBody] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data  \r\n    */\r\n   if (!title) {\r\n    alert('Set a name for your appointment')\r\n    return;\r\n   } else if (!contact) {\r\n    alert('Who is your appointment with?')\r\n    return;\r\n   } else if (!date || !time) {\r\n    alert('When is your appointment?')\r\n   } else {\r\n    addAppointment(title, contact, date, time, body);\r\n    setTitle('');\r\n    setContact('');\r\n    setDate('');\r\n    setTime('');\r\n    setBody('');\r\n    return;\r\n   }\r\n\r\n  };\r\n\r\n  const childProps = {\r\n    contacts,\r\n    title, setTitle,\r\n    contact, setContact,\r\n    date, setDate,\r\n    time, setTime,\r\n    body, setBody,\r\n    handleSubmit\r\n  }\r\n  const emptyMessage = 'Add an appointment';\r\n\r\n  return (\r\n    <div>\r\n      <Header pageName={'Appointments'} />\r\n      <section className='add-appointment'>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm {...childProps} />\r\n      </section>\r\n      <hr />\r\n      <section className='appointments-list'>\r\n        <h2>Appointments</h2>\r\n        <div className=\"appointments-tiles\">\r\n          <TileList data={appointments} emptyMessage={emptyMessage} />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport './contactForm.css';\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  notes, setNotes,\r\n  editing,\r\n  closeAddContact,\r\n  handleSubmit\r\n}) => {\r\n  // --------------------------- Listen for Escape to close modal\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', function esc(e) { \r\n      if (e.key === 'Escape') {\r\n        closeAddContact()\r\n        document.removeEventListener('keydown', esc);\r\n      };\r\n    });\r\n  }, [closeAddContact]);\r\n\r\n  const contactNotes = () => {\r\n    const el = document.querySelector('.contact-notes-container');\r\n    if (el.style.display === 'none') {\r\n      el.style.display = 'block';\r\n    } else {\r\n      el.style.display = 'none';\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-contact-modal\" onClick={closeAddContact} >\r\n      <div className=\"add-contact\"  onClick={e => e.stopPropagation()}>\r\n        <div className=\"add-contact-header\">\r\n          <h3>{editing ? 'Edit contact details' : 'Add contact details'}</h3>\r\n          <button className='close-item-button' onClick={closeAddContact}>  &#x2715;  </button>\r\n        </div>\r\n\r\n        <form className='contact-form' onSubmit={handleSubmit}>\r\n          <label htmlFor=\"name\">Name:</label><br/>\r\n          <input \r\n          type='text' \r\n          id='name'\r\n          autoComplete=\"new-password\"\r\n          value={name.split(' ').map(e => {\r\n            return e.charAt(0).toUpperCase() + e.slice(1);\r\n            }).join(' ')\r\n          } \r\n          onChange={(e) => setName(e.target.value)}></input>\r\n\r\n          <label htmlFor=\"phone\">UK Phone number:</label><br/>\r\n          <input type='tel' id='phone' pattern='[0][0-9]{10}$' value={phone} onChange={(e) => setPhone(e.target.value)}></input>\r\n\r\n          <label htmlFor=\"email\">Email address:</label><br/>\r\n          <input type='email' id='email' value={email} onChange={(e) => setEmail(e.target.value)}></input>\r\n\r\n          <div className=\"add-contact-note-button-div\">\r\n            <button className='add-contact-note-button' type='button' onClick={contactNotes}> \r\n              {editing ? 'Edit notes' : 'Add notes'}\r\n            </button>\r\n          </div>\r\n          \r\n          <input type='submit' value={editing ? 'Edit contact' : 'Save contact'}></input>\r\n        </form>\r\n        \r\n        <div className='contact-notes-container' style={{display:'none'}}>\r\n          <div className=\"contact-notes-header\">\r\n            <h3>Add a note</h3>\r\n            <button className='close-item-button' type='button' onClick={contactNotes}> &#x2715; </button>\r\n          </div>\r\n          <div className=\"contact-notes-area\">\r\n            <textarea \r\n              className=\"contact-text-area\"\r\n              form='contact-form' \r\n              placeholder=\"Notes. Max 110 characters.\"\r\n              maxLength=\"110\"\r\n              value={notes}\r\n              onChange={(e) => setNotes(e.target.value)}>\r\n            </textarea>\r\n          </div>\r\n          <div className=\"contact-notes-footer\">\r\n           <button className='close-contact-note-button' type='button' onClick={contactNotes}> Add note </button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport './contactDetails.css';\r\n\r\nexport const ContactDetails = ({ contactDetails, handleDelete, handleEditContact, closeContactDetails }) => {\r\n    return (\r\n        <div className='contact-details-container'>\r\n            <div className='contact-details-content'>\r\n                <div className='contact-details-header'>\r\n                    <h3 className='contact-details-name'>{contactDetails.name}</h3>\r\n                    <button className='close-item-button' onClick={closeContactDetails}>  &#x2715;  </button>\r\n                </div>\r\n                <div className='contact-details-body'>\r\n                    <div className='contact-details-item'>\r\n                        <h4>Phone</h4>\r\n                        <p>{contactDetails.phone}</p>\r\n                    </div>\r\n                    <div className='contact-details-item'>\r\n                        <h4>Email</h4>\r\n                        <p>{contactDetails.email}</p>\r\n                    </div>\r\n                    <div className='contact-details-item'>\r\n                        <h4>Notes</h4>\r\n                        <p>{contactDetails.notes}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='contact-details-footer'>\r\n                <button \r\n                    className='contact-details-button edit' \r\n                    onClick={() => {handleEditContact(contactDetails.name)}}>\r\n                        Edit contact\r\n                </button>\r\n                <button \r\n                    className='contact-details-button delete' \r\n                    onClick={() => {handleDelete(contactDetails.name)}}>\r\n                        Delete contact\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { ContactForm } from '../../components/contactForm/ContactForm';\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\nimport { ContactDetails } from '../../components/contactDetails/ContactDetails';\r\nimport { Header } from \"../../components/pageHeaders/header\";\r\nimport './contactsPage.css';\r\n\r\nexport const ContactsPage = ({ contacts, addContact, removeContact, editContact, screenSize }) => {\r\n\r\n const [name, setName] = useState('');\r\n const [phone, setPhone] = useState('');\r\n const [email, setEmail] = useState('');\r\n const [notes, setNotes] = useState('');\r\n const [duplicate, setDuplicate] = useState(false);\r\n const [showContact, setShowContact] = useState(false);\r\n const [contactDetails, setContactDetails] = useState('');\r\n const [editing, setEditing] = useState(false);\r\n const [showNewContact, setShowNewContact] = useState(false);\r\n const [showAddContact, setShowAddContact] = useState(false);\r\n\r\n const breakpoint = 820;\r\n\r\n  //  ----------------------------- Check for duplicate contacts\r\n  useEffect(() => {\r\n    setDuplicate(false);\r\n    if (contacts) {\r\n      contacts.forEach(contact => {\r\n        if (contact.name === name) {\r\n          setDuplicate(true);\r\n        }});\r\n    };\r\n  }, [name, contacts]);\r\n\r\n  //  ----------------------------- Show new contact once added\r\n  useEffect(() => {\r\n    if (showNewContact) {\r\n      showContactDetails(showNewContact);\r\n      setShowNewContact(false);\r\n    };\r\n  }, [contacts, showNewContact, setShowNewContact]);\r\n\r\n  const resetStates = () => {\r\n    setName('');\r\n    setPhone('');\r\n    setEmail('');\r\n    setNotes('');\r\n    setShowAddContact(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name) {\r\n      alert('Enter a contact name!');\r\n      return;\r\n    };\r\n    if (!phone && !email) {\r\n      alert('Enter a phone number or email!');\r\n      return;   \r\n    };\r\n    if (editing && (!duplicate || editing === name)) {\r\n      editContact(editing, name, phone, email, notes);\r\n      showContactDetails(name);\r\n      resetStates();\r\n      setEditing(false);\r\n      return;\r\n    };\r\n    if (!duplicate) {\r\n      addContact(name, phone, email, notes);\r\n      setShowNewContact(name);\r\n      resetStates();\r\n      return;\r\n    };\r\n    alert('Name already saved in contacts');\r\n  };\r\n\r\n  const handleAddContact = () => {\r\n    setShowAddContact(true);\r\n    setEditing(false);\r\n    setName('');\r\n    setPhone('');\r\n    setEmail('');\r\n    setNotes('');\r\n  };\r\n\r\n  const closeAddContact = () => {\r\n    setShowAddContact(false);\r\n  };\r\n\r\n  const handleEditContact = (name) => {\r\n    const contact = contacts.find(contact => contact.name === name);\r\n    setEditing(name);\r\n    setShowAddContact(true);\r\n    setName(contact.name);\r\n    setPhone(contact.phone);\r\n    setEmail(contact.email);\r\n    setNotes(contact.notes);\r\n  };\r\n\r\n  const handleDelete = (name) => {\r\n    removeContact(name);\r\n    setShowContact(false);\r\n    resetStates();\r\n    setEditing(false);\r\n  };\r\n\r\n  const showContactDetails = (name) => {\r\n    setContactDetails(contacts.find(contact => contact.name === name));\r\n    setShowContact(true);\r\n    setEditing(false);\r\n  };\r\n\r\n  const closeContactDetails = () => {\r\n    setShowContact(false);\r\n  };\r\n\r\n  const childProps = {\r\n    name, setName, \r\n    phone, setPhone,\r\n    email, setEmail,\r\n    notes, setNotes,\r\n    editing,\r\n    closeAddContact,\r\n    handleSubmit\r\n  };\r\n  const tileProps = contacts.map(contact => contact.name);\r\n  const emptyMessage = 'Add a contact';\r\n\r\n  return (\r\n    <div>\r\n      {showAddContact &&\r\n        <ContactForm {...childProps} />\r\n      }\r\n      <Header pageName={'Contacts'} />\r\n      <section className=\"contacts-page\">\r\n        <div className=\"contacts-page-contacts-container\">\r\n          <div className='contacts-list'>\r\n            <div className='contacts-list-header'>\r\n              <h3>Contacts</h3>\r\n              <button className='add-contact-button' onClick={handleAddContact}>Add contact</button>\r\n            </div>\r\n            <div className=\"contacts-tiles\">\r\n              <TileList data={tileProps} emptyMessage={emptyMessage} showDetails={showContactDetails} />\r\n            </div>\r\n          </div>\r\n\r\n          {screenSize < breakpoint\r\n           ?\r\n            showContact &&\r\n              <div className=\"contacts-page-details absolute contacts-page-details-mobile\">\r\n                <ContactDetails contactDetails={contactDetails} handleDelete={handleDelete} handleEditContact={handleEditContact} closeContactDetails={closeContactDetails} />\r\n              </div>\r\n           :\r\n           <div className=\"contacts-page-details\">\r\n           { showContact ? \r\n            <ContactDetails contactDetails={contactDetails} handleDelete={handleDelete} handleEditContact={handleEditContact} closeContactDetails={closeContactDetails} />\r\n           :\r\n             <div className=\"contact-details-filler-display\">\r\n               <button className='contact-details-button add' onClick={handleAddContact}>Add a contact</button>\r\n             </div>\r\n           }\r\n            </div>\r\n          }\r\n          \r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n\r\n  const [screenSize, setScreenSize] = useState(window.innerWidth);\r\n  const [contacts, setContacts] = useState([\r\n    {\r\n      name: 'Daniel S',\r\n      phone: '07868695495',\r\n      email: 'eamail@tmail.formail',\r\n      notes: 'Need to add edit and delete buttons to the contact details component'\r\n    },\r\n    {\r\n      name: 'Johnny Boy',\r\n      phone: '09287654352',\r\n      email: 'johboy@hotters.lol',\r\n      notes: 'Also make the contact details component full screen modal under certain screen size'\r\n    },\r\n    {\r\n      name: 'Windsor Hallifax',\r\n      phone: '02938475647',\r\n      email: 'youknow@here.com',\r\n      notes: 'Set a max character value for notes or this could get silly.'\r\n    },\r\n    {\r\n      name: 'John Bob',\r\n      phone: '09287654352',\r\n      email: 'johboy@hotters.lol',\r\n      notes: 'Pretty solid guy. John Bob gets the job done'\r\n    },\r\n    {\r\n      name: 'Hallifax Don',\r\n      phone: '02938475647',\r\n      email: 'youknow@here.com',\r\n      notes: 'I should set a max length for these notes'\r\n    },\r\n    {\r\n      name: 'Troy Duple',\r\n      phone: '09287654352',\r\n      email: 'johboy@hotters.lol',\r\n      notes: 'Thinks hes great. Refers to himself as THE Troy from mytholigy. Not sure thats how you spell that but it does not matter at the moment.'\r\n    },\r\n    {\r\n      name: 'Sarcy Git',\r\n      phone: '02938475647',\r\n      email: 'youknow@here.com',\r\n      notes: 'Really sarcastic person. Only good in small doses..'\r\n    },\r\n    {\r\n      name: 'Blane Parting',\r\n      phone: '09287654352',\r\n      email: 'johboy@hotters.lol',\r\n      notes: 'Bit annoying'\r\n    },\r\n    {\r\n      name: 'Snoopy',\r\n      phone: '02938475647',\r\n      email: 'youknow@here.com',\r\n      notes: 'Pretty solid guy'\r\n    }\r\n  ]);\r\n  const [appointments, setAppointments] = useState([\r\n    {\r\n      title: 'Walk the dog',\r\n      contact: 'Windsor Hallifax',\r\n      date: '2022-06-21',\r\n      time: '06:20'\r\n    },\r\n    {\r\n      title: 'Walk the goldfish',\r\n      contact: 'johnny boy',\r\n      date: '2022-06-21',\r\n      time: '06:20'\r\n    },\r\n    {\r\n      title: 'Walk the iguana',\r\n      contact: 'johnny boy',\r\n      date: '2022-06-21',\r\n      time: '06:20'\r\n    },\r\n    {\r\n      title: 'Walk the panda bear',\r\n      contact: 'Windsor Hallifax',\r\n      date: '2022-06-21',\r\n      time: '06:20'\r\n    }\r\n  ]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  // --------------------------- Set current screen size state\r\n  useEffect(() => {\r\n    const handleResizeWindow = () => setScreenSize(window.innerWidth);\r\n    window.addEventListener('resize', handleResizeWindow);\r\n    return () => window.removeEventListener('resize', handleResizeWindow);\r\n  }, []);\r\n\r\n  // --------------------------- Alphabetize contacts\r\n  useEffect(() => {\r\n    setContacts(contacts.sort((a, b) => a.name.localeCompare(b.name)))\r\n  }, [contacts]);\r\n\r\n  const addContact = (name, phone, email, notes) => {\r\n    const contact = {\r\n      name: name,\r\n      phone: phone,\r\n      email: email,\r\n      notes: notes\r\n    };\r\n    setContacts(prev => [...prev, contact]);\r\n  };\r\n\r\n  const editContact = (name, newName, newPhone, newEmail, newNotes) => {\r\n    const current = contacts;\r\n    const contact = current.findIndex(contact => contact.name === name);\r\n    current[contact] = {\r\n      name: newName,\r\n      phone: newPhone,\r\n      email: newEmail,\r\n      notes: newNotes\r\n    }\r\n    setContacts(current.sort((a, b) => a.name.localeCompare(b.name)));\r\n  };\r\n\r\n  const removeContact = (name) => {\r\n    setContacts(contacts.filter((contact) => contact.name !== name));\r\n  }; \r\n\r\n  const addAppointment = (title, contact, date, time, body) => {\r\n    const appointment = {\r\n      title: title,\r\n      contact: contact,\r\n      date: date,\r\n      time: time,\r\n      body: body\r\n    };\r\n    setAppointments(prev => [...prev, appointment]);\r\n  };\r\n\r\n  // const removeAppointment = (id) => {\r\n  //   setAppointments(appointments.filter((appointment, index) => index !== id));\r\n  // }; \r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=\"bg\"></div>\r\n      <nav className=\"nav-bar\">\r\n        <NavLink to={ROUTES.CONTACTS} className=\"navLink\" activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} className=\"navLink\" activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n            <ContactsPage contacts={contacts} addContact={addContact} removeContact={removeContact} editContact={editContact} screenSize={screenSize} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            <AppointmentsPage appointments={appointments} contacts={contacts} addAppointment={addAppointment} />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}