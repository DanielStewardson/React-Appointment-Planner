{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","components/contactDetails/ContactDetails.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","contact","setContact","htmlFor","id","value","onChange","e","target","map","name","AppointmentForm","title","setTitle","date","setDate","time","setTime","body","setBody","handleSubmit","className","onSubmit","type","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","form","rows","cols","placeholder","Tile","data","showDetails","tileData","Object","values","onClick","alert","element","index","TileList","emptyMessage","length","AppointmentsPage","appointments","addAppointment","handleDelete","useState","childProps","preventDefault","ContactForm","setName","phone","setPhone","email","setEmail","editing","notes","setNotes","pattern","style","background","ContactDetails","contactDetails","handleEditContact","ContactsPage","addContact","removeContact","editContact","duplicate","setDuplicate","showContact","setShowContact","setContactDetails","setEditing","showNewContact","setShowNewContact","useEffect","forEach","showContactDetails","resetStates","find","tileProps","App","setContacts","setAppointments","ROUTES","to","activeClassName","exact","path","prev","filter","newName","newPhone","newEmail","newNotes","current","findIndex","appointment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d228f8d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({ contacts, contact, setContact }) => {\r\n  return (\r\n    <>\r\n      <label htmlFor='contacts'>Contact:</label>\r\n      <select id='contacts' value={contact} onChange={(e) => setContact(e.target.value)}>\r\n        <option>Select contact details</option>\r\n          {contacts.map((contact) => {\r\n            return (\r\n              <option key={contact.name} value={contact.name}>{contact.name}</option>\r\n            )\r\n          })}\r\n      </select>\r\n    </>\r\n  );\r\n};","import React from \"react\";\r\nimport { ContactPicker } from '../contactPicker/ContactPicker';\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  body, \r\n  setBody,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <div className='appointment-form-container'>\r\n      <form className='appointment-form' id='appointmentForm' onSubmit={handleSubmit}>\r\n        <label htmlFor=\"title\">Appointment title:</label><br/>\r\n        <input type='text' value={title} id='title' onChange={(e) => setTitle(e.target.value)}></input>\r\n\r\n        <label htmlFor=\"date\">Date:</label><br/>\r\n        <input type='date' value={date} id='date' min={getTodayString()} onChange={(e) => setDate(e.target.value)}></input>\r\n\r\n        <label htmlFor=\"time\">Time:</label><br/>\r\n        <input type='time' value={time} id='time' onChange={(e) => setTime(e.target.value)}></input>\r\n\r\n        <ContactPicker contacts={contacts} setContact={setContact} contact={contact} />\r\n\r\n        <input type='submit' value='Add appointment'></input>\r\n      </form>\r\n\r\n      <textarea \r\n        className='appointment-text-area' \r\n        form='appointmentForm' \r\n        rows='15' cols='50' \r\n        placeholder=\"Notes:\"\r\n        value={body}\r\n        onChange={(e) => setBody(e.target.value)}\r\n      ></textarea>\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\n\r\nexport const Tile = ({ data, showDetails }) => {\r\n  const tileData = Object.values(data);\r\n\r\n  if (typeof data === 'string') {\r\n    return (\r\n      <div className=\"tile\" onClick={() => showDetails(data)}>\r\n        <p className='tile-title'>{data}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"tile\" onClick={() => alert(tileData)}>\r\n      {\r\n        tileData.map((element, index) => {\r\n          if (index === 0) {\r\n            return <p key={index} className='tile-title'>{element}</p>\r\n          }\r\n            return <p key={index} className='tile-text'>{element}</p>\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\n// Make notes a pop out on click rather then straight render\r\n//make onclick run passed down function from contacts, appoints etc. that will open modal","import React from \"react\";\r\nimport { Tile } from \"../tile/Tile\";\r\n\r\nexport const TileList = ({ data, emptyMessage, showDetails }) => {\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <div>\r\n         <p>{emptyMessage}</p>\r\n      </div>\r\n      )\r\n  }\r\n  return (\r\n    <>\r\n      {\r\n        data.map((element, index) => {\r\n          return <Tile key={index} data={element} showDetails={showDetails} />\r\n        })\r\n      }\r\n    </>\r\n  );\r\n};","import React, { useState } from \"react\";\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\nimport './appointmentsPage.css';\r\n\r\nexport const AppointmentsPage = ({ appointments, contacts, addAppointment, handleDelete }) => {\r\n  /*\r\n  Define state variables for \r\n  appointment info\r\n  */\r\n  const [title, setTitle] = useState('');\r\n  const [contact, setContact] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n  const [body, setBody] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data  \r\n    */\r\n   if (!title) {\r\n    alert('Set a name for your appointment')\r\n    return;\r\n   } else if (!contact) {\r\n    alert('Who is your appointment with?')\r\n    return;\r\n   } else if (!date || !time) {\r\n    alert('When is your appointment?')\r\n   } else {\r\n    addAppointment(title, contact, date, time, body);\r\n    setTitle('');\r\n    setContact('');\r\n    setDate('');\r\n    setTime('');\r\n    setBody('');\r\n    return;\r\n   }\r\n\r\n  };\r\n\r\n  const childProps = {\r\n    contacts,\r\n    title, setTitle,\r\n    contact, setContact,\r\n    date, setDate,\r\n    time, setTime,\r\n    body, setBody,\r\n    handleSubmit\r\n  }\r\n  const emptyMessage = 'Add an appointment';\r\n\r\n  return (\r\n    <div>\r\n      <section className='add-appointment'>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm {...childProps} />\r\n      </section>\r\n      <hr />\r\n      <section className='appointments-list'>\r\n        <h2>Appointments</h2>\r\n        <div className=\"appointments-tiles\">\r\n          <TileList data={appointments} emptyMessage={emptyMessage} />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport './contactForm.css';\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  notes, setNotes,\r\n  editing,\r\n  handleSubmit\r\n}) => {\r\n  return (\r\n    <form className='contact-form' onSubmit={handleSubmit}>\r\n      <label htmlFor=\"name\">Name:</label><br/>\r\n      <input type='text' id='name' value={name} onChange={(e) => setName(e.target.value)}></input>\r\n\r\n      <label htmlFor=\"phone\">UK Phone number:</label><br/>\r\n      <input type='tel' id='phone' pattern='[0][0-9]{10}$' value={phone} onChange={(e) => setPhone(e.target.value)}></input>\r\n\r\n      <label htmlFor=\"email\">Email address:</label><br/>\r\n      <input type='email' id='email' value={email} onChange={(e) => setEmail(e.target.value)}></input>\r\n\r\n    {editing \r\n      ?     \r\n        <input\r\n          type='submit' \r\n          value='Edit contact'\r\n          style={{background: 'hsl(97, 40%, 49%)'}}>\r\n        </input>\r\n      :\r\n        <input \r\n          type='submit' \r\n          value='Save contact'\r\n          style={{ background:' #03a8d8'}}>    \r\n        </input>\r\n    }\r\n    </form>\r\n  );\r\n};","import React from \"react\";\r\nimport './contactDetails.css';\r\n\r\nexport const ContactDetails = ({ contactDetails, handleDelete, handleEditContact }) => {\r\n    return (\r\n        <div className='contact-details-container'>\r\n            <div className='contact-details-content'>\r\n                <div className='contact-details-header'>\r\n                    <h3 className='contact-details-name'>{contactDetails.name}</h3>\r\n                </div>\r\n                <div className='contact-details-body'>\r\n                    <div className='contact-details-item'>\r\n                        <h4>Phone</h4>\r\n                        <p>{contactDetails.phone}</p>\r\n                    </div>\r\n                    <div className='contact-details-item'>\r\n                        <h4>Email</h4>\r\n                        <p>{contactDetails.email}</p>\r\n                    </div>\r\n                    <div className='contact-details-item'>\r\n                        <h4>Notes</h4>\r\n                        <p>{contactDetails.notes}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='contact-details-footer'>\r\n                <button \r\n                    className='contact-details-button edit' \r\n                    onClick={() => {handleEditContact(contactDetails.name)}}>\r\n                        Edit contact\r\n                </button>\r\n                <button \r\n                    className='contact-details-button delete' \r\n                    onClick={() => {handleDelete(contactDetails.name)}}>\r\n                        Delete contact\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { ContactForm } from '../../components/contactForm/ContactForm';\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\nimport { ContactDetails } from '../../components/contactDetails/ContactDetails';\r\nimport './contactsPage.css';\r\n\r\nexport const ContactsPage = ({ contacts, addContact, removeContact, editContact }) => {\r\n\r\n const [name, setName] = useState('');\r\n const [phone, setPhone] = useState('');\r\n const [email, setEmail] = useState('');\r\n const [notes, setNotes] = useState('');\r\n const [duplicate, setDuplicate] = useState(false);\r\n const [showContact, setShowContact] = useState(false);\r\n const [contactDetails, setContactDetails] = useState('');\r\n const [editing, setEditing] = useState(false);\r\n const [showNewContact, setShowNewContact] = useState(false);\r\n\r\n  //  ----------------------------- Check for duplicate contact\r\n  useEffect(() => {\r\n    setDuplicate(false);\r\n    if (contacts) {\r\n      contacts.forEach(contact => {\r\n        if (contact.name === name) {\r\n          setDuplicate(true);\r\n        }});\r\n    };\r\n  }, [name, contacts]);\r\n\r\n  //  ----------------------------- Show new contact once added\r\n  useEffect(() => {\r\n    if (showNewContact) {\r\n      showContactDetails(showNewContact);\r\n      setShowNewContact(false);\r\n    };\r\n  }, [contacts]);\r\n\r\n  const resetStates = () => {\r\n    setName('');\r\n    setPhone('');\r\n    setEmail('');\r\n    setNotes('');\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name) {\r\n      alert('Enter a contact name!');\r\n      return;\r\n    };\r\n    if (!phone && !email) {\r\n      alert('Enter a phone number or email!');\r\n      return;   \r\n    };\r\n    if (editing && (!duplicate || editing === name)) {\r\n      editContact(editing, name, phone, email, notes);\r\n      showContactDetails(name);\r\n      resetStates();\r\n      setEditing(false);\r\n      return;\r\n    };\r\n    if (!duplicate) {\r\n      addContact(name, phone, email, notes);\r\n      setShowNewContact(name);\r\n      resetStates();\r\n      return;\r\n    };\r\n    alert('Name already saved in contacts');\r\n  };\r\n\r\n  const handleEditContact = (name) => {\r\n    const contact = contacts.find(contact => contact.name === name);\r\n    setEditing(name);\r\n    setName(contact.name);\r\n    setPhone(contact.phone);\r\n    setEmail(contact.email);\r\n    setNotes(contact.notes);\r\n  };\r\n\r\n  const handleDelete = (name) => {\r\n    removeContact(name);\r\n    setShowContact(false);\r\n    resetStates();\r\n  };\r\n\r\n  const showContactDetails = (name) => {\r\n    setContactDetails(contacts.find(contact => contact.name === name));\r\n    setShowContact(true);\r\n  };\r\n\r\n\r\n  const childProps = {\r\n    name, setName, \r\n    phone, setPhone,\r\n    email, setEmail,\r\n    notes, setNotes,\r\n    editing,\r\n    handleSubmit\r\n  };\r\n  const tileProps = contacts.map(contact => contact.name);\r\n  const emptyMessage = 'Add a contact';\r\n\r\n  return (\r\n    <div>\r\n      <section className='add-contact'>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm {...childProps} />\r\n      </section>\r\n      <hr />\r\n      <section className=\"contacts-page-contacts-container\">\r\n        <div className='contacts-list'>\r\n          <h3>Contacts</h3>\r\n          <div className=\"contacts-tiles\">\r\n            <TileList data={tileProps} emptyMessage={emptyMessage} showDetails={showContactDetails} />\r\n          </div>\r\n        </div>\r\n        <div className=\"contacts-page-details\">\r\n          { showContact && \r\n           <ContactDetails contactDetails={contactDetails} handleDelete={handleDelete} handleEditContact={handleEditContact} />\r\n          }\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};","import React, { useState } from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n\r\n const [contacts, setContacts] = useState([\r\n  {\r\n    name: 'daniel s',\r\n    phone: '07868695495',\r\n    email: 'eamail@tmail.formail',\r\n    notes: 'Need to add edit and delete buttons to the contact details component'\r\n  },\r\n  {\r\n    name: 'johnny boy',\r\n    phone: '09287654352',\r\n    email: 'johboy@hotters.lol',\r\n    notes: 'Also make the contact details component full screen modal under certain screen size'\r\n  },\r\n  {\r\n    name: 'Windsor Hallifax',\r\n    phone: '02938475647',\r\n    email: 'youknow@here.com',\r\n    notes: 'Set a max character value for notes or this could get silly.'\r\n  },\r\n  {\r\n    name: 'john bob',\r\n    phone: '09287654352',\r\n    email: 'johboy@hotters.lol',\r\n    notes: 'Pretty solid guy. John Bob gets the job done'\r\n  },\r\n  {\r\n    name: 'Hallifax Don',\r\n    phone: '02938475647',\r\n    email: 'youknow@here.com',\r\n    notes: 'I should set a max length for these notes'\r\n  },\r\n  {\r\n    name: 'Troy duple',\r\n    phone: '09287654352',\r\n    email: 'johboy@hotters.lol',\r\n    notes: 'Thinks hes great. Refers to himself as THE Troy from mytholigy. Not sure thats how you spell that but it does not matter at the moment.'\r\n  },\r\n  {\r\n    name: 'Sarcy git',\r\n    phone: '02938475647',\r\n    email: 'youknow@here.com',\r\n    notes: 'Really sarcastic person. Only good in small doses..'\r\n  },\r\n  {\r\n    name: 'Blane Parting',\r\n    phone: '09287654352',\r\n    email: 'johboy@hotters.lol',\r\n    notes: 'Bit annoying'\r\n  },\r\n  {\r\n    name: 'Snoopy',\r\n    phone: '02938475647',\r\n    email: 'youknow@here.com',\r\n    notes: 'Pretty solid guy'\r\n  }\r\n ]);\r\n const [appointments, setAppointments] = useState([\r\n  {\r\n    title: 'Walk the dog',\r\n    contact: 'Windsor Hallifax',\r\n    date: '2022-06-21',\r\n    time: '06:20'\r\n  },\r\n  {\r\n    title: 'Walk the goldfish',\r\n    contact: 'johnny boy',\r\n    date: '2022-06-21',\r\n    time: '06:20'\r\n  },\r\n  {\r\n    title: 'Walk the iguana',\r\n    contact: 'johnny boy',\r\n    date: '2022-06-21',\r\n    time: '06:20'\r\n  },\r\n  {\r\n    title: 'Walk the panda bear',\r\n    contact: 'Windsor Hallifax',\r\n    date: '2022-06-21',\r\n    time: '06:20'\r\n  }\r\n ]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  const addContact = (name, phone, email, notes) => {\r\n    const contact = {\r\n      name: name,\r\n      phone: phone,\r\n      email: email,\r\n      notes: notes\r\n    };\r\n    setContacts(prev => [...prev, contact]);\r\n  };\r\n\r\n  const editContact = (name, newName, newPhone, newEmail, newNotes) => {\r\n    const current = contacts;\r\n    const contact = current.findIndex(contact => contact.name === name);\r\n    current[contact] = {\r\n      name: newName,\r\n      phone: newPhone,\r\n      email: newEmail,\r\n      notes: newNotes\r\n    }\r\n    setContacts(current);\r\n  };\r\n\r\n  const removeContact = (name) => {\r\n    setContacts(contacts.filter((contact) => contact.name !== name));\r\n  }; \r\n\r\n  const addAppointment = (title, contact, date, time, body) => {\r\n    const appointment = {\r\n      title: title,\r\n      contact: contact,\r\n      date: date,\r\n      time: time,\r\n      body: body\r\n    };\r\n    setAppointments(prev => [...prev, appointment]);\r\n  };\r\n\r\n  // const removeAppointment = (id) => {\r\n  //   setAppointments(appointments.filter((appointment, index) => index !== id));\r\n  // }; \r\n\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n             {/* Add props to ContactsPage */}\r\n            <ContactsPage contacts={contacts} addContact={addContact} removeContact={removeContact} editContact={editContact}/>\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            {/* Add props to AppointmentsPage */}\r\n            <AppointmentsPage appointments={appointments} contacts={contacts} addAppointment={addAppointment} />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}