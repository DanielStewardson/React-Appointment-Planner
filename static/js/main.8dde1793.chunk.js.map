{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/deleteButton/DeleteButton.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","contact","setContact","htmlFor","id","value","onChange","e","target","map","name","AppointmentForm","title","setTitle","date","setDate","time","setTime","body","setBody","handleSubmit","className","onSubmit","type","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","form","rows","cols","placeholder","DeleteButton","handleDelete","onClick","Tile","data","tileData","Object","values","element","index","TileList","emptyMessage","length","AppointmentsPage","appointments","addAppointment","useState","childProps","preventDefault","alert","ContactForm","setName","phone","setPhone","email","setEmail","pattern","ContactsPage","addContact","duplicate","setDuplicate","useEffect","forEach","App","setContacts","setAppointments","ROUTES","to","activeClassName","exact","path","prev","filter","appointment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8dde1793.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({ contacts, contact, setContact }) => {\r\n  return (\r\n    <>\r\n      <label htmlFor='contacts'>Contact:</label>\r\n      <select id='contacts' value={contact} onChange={(e) => setContact(e.target.value)}>\r\n        <option>Select contact details</option>\r\n          {contacts.map((contact) => {\r\n            return (\r\n              <option key={contact.name} value={contact.name}>{contact.name}</option>\r\n            )\r\n          })}\r\n\r\n      </select>\r\n    </>\r\n  );\r\n};","import React from \"react\";\r\nimport { ContactPicker } from '../contactPicker/ContactPicker';\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  body, \r\n  setBody,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <div className='appointment-form-container'>\r\n      <form className='appointment-form' id='appointmentForm' onSubmit={handleSubmit}>\r\n        <label htmlFor=\"title\">Appointment title:</label><br/>\r\n        <input type='text' value={title} id='title' onChange={(e) => setTitle(e.target.value)}></input>\r\n\r\n        <label htmlFor=\"date\">Date:</label><br/>\r\n        <input type='date' value={date} id='date' min={getTodayString()} onChange={(e) => setDate(e.target.value)}></input>\r\n\r\n        <label htmlFor=\"time\">Time:</label><br/>\r\n        <input type='time' value={time} id='time' onChange={(e) => setTime(e.target.value)}></input>\r\n\r\n        <ContactPicker contacts={contacts} setContact={setContact} contact={contact} />\r\n\r\n        <input type='submit' value='Add appointment'></input>\r\n      </form>\r\n\r\n      <textarea \r\n        className='appointment-text-area' \r\n        form='appointmentForm' \r\n        rows='15' cols='50' \r\n        placeholder=\"Notes:\"\r\n        value={body}\r\n        onChange={(e) => setBody(e.target.value)}\r\n      ></textarea>\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\n\r\nexport const DeleteButton = ({ id, handleDelete }) => {\r\n\r\n    return (\r\n        <button className='delete-button' onClick={() => {handleDelete(id)}}>X</button>\r\n    )\r\n}","import React from \"react\";\r\nimport { DeleteButton } from \"../deleteButton/DeleteButton\";\r\n\r\nexport const Tile = ({ data, id, handleDelete }) => {\r\n  const tileData = Object.values(data);\r\n\r\n  return (\r\n    <div className=\"tile-container\">\r\n      <DeleteButton id={id} handleDelete={handleDelete} />\r\n      {\r\n        tileData.map((element, index) => {\r\n          if (index === 0){\r\n          return <p key={index} className='tile-title'>{element}</p>\r\n          }\r\n          return <p key={index} className='tile'>{element}</p>\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\n// Make notes a pop out on click rather then straight render","import React from \"react\";\r\nimport { Tile } from \"../tile/Tile\";\r\n\r\nexport const TileList = ({ data, emptyMessage, handleDelete }) => {\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <div>\r\n         <p>{emptyMessage}</p>\r\n      </div>\r\n      )\r\n  }\r\n  return (\r\n    <>\r\n      {\r\n        data.map((element, index) => {\r\n          return <Tile key={index} data={element} handleDelete={handleDelete} id={index}/>\r\n        })\r\n      }\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\nimport './appointmentsPage.css';\r\n\r\nexport const AppointmentsPage = ({ appointments, contacts, addAppointment, handleDelete }) => {\r\n  /*\r\n  Define state variables for \r\n  appointment info\r\n  */\r\n  const [title, setTitle] = useState('');\r\n  const [contact, setContact] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n  const [body, setBody] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data  \r\n    */\r\n   if (!title) {\r\n    alert('Set a name for your appointment')\r\n    return;\r\n   } else if (!contact) {\r\n    alert('Who is your appointment with?')\r\n    return;\r\n   } else if (!date || !time) {\r\n    alert('When is your appointment?')\r\n   } else {\r\n    addAppointment(title, contact, date, time, body);\r\n    setTitle('');\r\n    setContact('');\r\n    setDate('');\r\n    setTime('');\r\n    setBody('');\r\n    return;\r\n   }\r\n\r\n  };\r\n\r\n  const childProps = {\r\n    contacts,\r\n    title, setTitle,\r\n    contact, setContact,\r\n    date, setDate,\r\n    time, setTime,\r\n    body, setBody,\r\n    handleSubmit\r\n  }\r\n\r\n  const emptyMessage = 'Add an appointment';\r\n\r\n  return (\r\n    <div>\r\n      <section className='add-appointment'>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm {...childProps} />\r\n      </section>\r\n      <hr />\r\n      <section className='appointments-list'>\r\n        <h2>Appointments</h2>\r\n        <div className=\"appointments-tiles\">\r\n          <TileList data={appointments} emptyMessage={emptyMessage} handleDelete={handleDelete} />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n}) => {\r\n  return (\r\n    <form className='contact-form' onSubmit={handleSubmit}>\r\n      <label htmlFor=\"name\">Name:</label><br/>\r\n      <input type='text' id='name' value={name} onChange={(e) => setName(e.target.value)}></input>\r\n\r\n      <label htmlFor=\"phone\">UK Phone number:</label><br/>\r\n      <input type='tel' id='phone' pattern='[0][0-9]{10}$' value={phone} onChange={(e) => setPhone(e.target.value)}></input>\r\n\r\n      <label htmlFor=\"email\">Email address:</label><br/>\r\n      <input type='email' id='email' value={email} onChange={(e) => setEmail(e.target.value)}></input>\r\n\r\n      <input type='submit' value='Save contact'></input>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ContactForm } from '../../components/contactForm/ContactForm';\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\nimport './contactsPage.css';\r\n\r\nexport const ContactsPage = ({ contacts, addContact, handleDelete }) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n const [name, setName] = useState('');\r\n const [phone, setPhone] = useState('');\r\n const [email, setEmail] = useState('');\r\n const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n   if (!name) {\r\n    alert('Enter a contact name!');\r\n    return;\r\n   }\r\n   if (!phone && !email) {\r\n    alert('Enter a phone number or email!');\r\n    return;   \r\n   }\r\n   if (!duplicate) {\r\n    addContact(name, phone, email);\r\n    setName('');\r\n    setPhone('');\r\n    setEmail('');\r\n    return;\r\n   } \r\n   alert('Name already saved in contacts');\r\n  };\r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n  useEffect(() => {\r\n    if (contacts) {\r\n      contacts.forEach(contact => {\r\n        if (contact.name === name) {\r\n          setDuplicate(true);\r\n        } else {\r\n          setDuplicate(false);\r\n        }\r\n      })\r\n    }\r\n  }, [name, contacts])\r\n\r\n  const childProps = {\r\n    name, setName, \r\n    phone, setPhone,\r\n    email, setEmail,\r\n    handleSubmit\r\n  };\r\n\r\n  const emptyMessage = 'Add a contact';\r\n\r\n  return (\r\n    <div>\r\n      <section className='add-contact'>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm {...childProps} />\r\n      </section>\r\n      <hr />\r\n      <section className='contacts-list'>\r\n        <h2>Contacts</h2>\r\n        <div className=\"contacts-tiles\">\r\n          <TileList data={contacts} emptyMessage={emptyMessage} handleDelete={handleDelete} />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n const [contacts, setContacts] = useState([\r\n  {\r\n    name: 'daniel s',\r\n    phone: '07868695495',\r\n    email: 'eamail@tmail.formail'\r\n  },\r\n  {\r\n    name: 'johnny boy',\r\n    phone: '09287654352',\r\n    email: 'johboy@hotters.lol'\r\n  },\r\n  {\r\n    name: 'Windsor Hallifax',\r\n    phone: '02938475647',\r\n    email: 'youknow@here.com'\r\n  },\r\n  {\r\n    name: 'johnny boy',\r\n    phone: '09287654352',\r\n    email: 'johboy@hotters.lol'\r\n  },\r\n  {\r\n    name: 'Windsor Hallifax',\r\n    phone: '02938475647',\r\n    email: 'youknow@here.com'\r\n  },\r\n  {\r\n    name: 'johnny boy',\r\n    phone: '09287654352',\r\n    email: 'johboy@hotters.lol'\r\n  },\r\n  {\r\n    name: 'Windsor Hallifax',\r\n    phone: '02938475647',\r\n    email: 'youknow@here.com'\r\n  },\r\n  {\r\n    name: 'johnny boy',\r\n    phone: '09287654352',\r\n    email: 'johboy@hotters.lol'\r\n  },\r\n  {\r\n    name: 'Windsor Hallifax',\r\n    phone: '02938475647',\r\n    email: 'youknow@here.com'\r\n  }\r\n ]);\r\n const [appointments, setAppointments] = useState([\r\n  {\r\n    title: 'Walk the dog',\r\n    contact: 'Windsor Hallifax',\r\n    date: '2022-06-21',\r\n    time: '06:20'\r\n  },\r\n  {\r\n    title: 'Walk the goldfish',\r\n    contact: 'johnny boy',\r\n    date: '2022-06-21',\r\n    time: '06:20'\r\n  },\r\n  {\r\n    title: 'Walk the iguana',\r\n    contact: 'johnny boy',\r\n    date: '2022-06-21',\r\n    time: '06:20'\r\n  },\r\n  {\r\n    title: 'Walk the panda bear',\r\n    contact: 'Windsor Hallifax',\r\n    date: '2022-06-21',\r\n    time: '06:20'\r\n  }\r\n ]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  const addContact = (name, phone, email) => {\r\n    const contact = {\r\n      name: name,\r\n      phone: phone,\r\n      email: email\r\n    };\r\n    setContacts(prev => [...prev, contact]);\r\n  };\r\n  //Add key to all state for delete button?\r\n\r\n  const removeContact = (id) => {\r\n    setContacts(contacts.filter((contact, index) => index !== id));\r\n  }; \r\n\r\n  const addAppointment = (title, contact, date, time, body) => {\r\n    const appointment = {\r\n      title: title,\r\n      contact: contact,\r\n      date: date,\r\n      time: time,\r\n      body: body\r\n    };\r\n    setAppointments(prev => [...prev, appointment]);\r\n  };\r\n\r\n  const removeAppointment = (id) => {\r\n    setAppointments(appointments.filter((appointment, index) => index !== id));\r\n  }; \r\n\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n             {/* Add props to ContactsPage */}\r\n            <ContactsPage contacts={contacts} addContact={addContact} handleDelete={removeContact} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            {/* Add props to AppointmentsPage */}\r\n            <AppointmentsPage appointments={appointments} contacts={contacts} addAppointment={addAppointment} handleDelete={removeAppointment} />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}